name: dbt-slim

on:
  pull_request:
    types:
      - opened
    paths:
      - "transform/mainkode_analytics/**/*.sql"
      - "transform/mainkode_analytics/**/*.yml"
      - "transform/mainkode_analytics/**/*.json"
    branches:
      - master

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-west-1
  DBT_PROFILES_DIR: ${{ github.workspace }}/transform/mainkode_analytics/profiles
  DBT_PROJECT_DIR: ${{ github.workspace }}/transform/mainkode_analytics
  DBT_ARTIFACT_PATH: ${{ github.workspace }}/transform/mainkode_analytics/target/manifest.json
  S3_ARTIFACT_PATH: s3://s3-dbt-artifacts/manifests/ci/manifest.json
  SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
  SNOWFLAKE_TRANSFORM_USER: ${{ secrets.SNOWFLAKE_USER }}
  SNOWFLAKE_TRANSFORM_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
  SNOWFLAKE_TRANSFORM_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}

jobs:
  lint:
    name: SQL Linting with SQLFluff
    runs-on: ubuntu-latest
    environment: dbt-dev
    env:
      SNOWFLAKE_TRANSFORM_DATABASE: ${{ vars.SNOWFLAKE_TRANSFORM_DATABASE_DEV }}
      SNOWFLAKE_TRANSFORM_WAREHOUSE: ${{ vars.SNOWFLAKE_TRANSFORM_WAREHOUSE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          pip install sqlfluff==3.2.4
          pip install sqlfluff-templater-dbt==3.2.4
          pip install dbt-core==1.8.7
          pip install dbt-snowflake==1.8.3
          
      - name: Run SQLFluff Linting
        run: |
          cd ${{ env.DBT_PROJECT_DIR }} && dbt deps && make lint-changed-new BRANCH=origin/master

  build-modified-models:
    name: Build modified models
    runs-on: ubuntu-latest
    needs: lint
    environment: dbt-dev
    env:
      SNOWFLAKE_TRANSFORM_DATABASE: ${{ vars.SNOWFLAKE_TRANSFORM_DATABASE_CLONE }}
      SNOWFLAKE_TRANSFORM_WAREHOUSE: ${{ vars.SNOWFLAKE_TRANSFORM_WAREHOUSE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install dbt-core==1.8.7
          pip install dbt-snowflake==1.8.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::362262895301:role/github-action-s3
          aws-region: ${{ env.AWS_REGION }}

      - name: Download dbt manifest
        run: aws s3 cp ${{ env.S3_ARTIFACT_PATH }} ${{ github.workspace }}

      - name: Install dbt dependencies
        run: |
          dbt deps --project-dir=${{ env.DBT_PROJECT_DIR }}

      - name: Build modified dbt models and its first-order children
        run: |
          dbt build --profiles-dir=${{ env.DBT_PROFILES_DIR }} --project-dir=${{ env.DBT_PROJECT_DIR }} --target=ci \
            --select state:modified+ --defer --state ${{ github.workspace }} --vars '{schema: CI_SCHEMA_${{ github.event.number }}}' --target=ci

      - name: Upload dbt manifest
        run: aws s3 cp ${{ env.DBT_ARTIFACT_PATH }} ${{ env.S3_ARTIFACT_PATH }}