
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'mainkode_analytics'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'mainkode'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  mainkode_analytics:
    # Staging Layer
    staging:
      +materialized: view
      schema: staging
      tags: ['staging','hourly']
    # Intermediate Layer
    intermediate:
      +materialized: table
      tags: ['intermediate']
      shopify:
        schema: int_shopify
        tags: ['nightly']
      shipping_cost:
        schema: int_shipping_cost
        tags: ['nightly']
      manafacturing_cost:
        schema: int_manafacturing_cost
        tags: ['nightly']
      marketing_cost:
        schema: int_marketing_cost
        tags: ['nightly']
      vat_cost:
        schema: int_vat_cost
        tags: ['nightly']
    # Marts Layer
    marts:
      +materialized: table
      tags: ['marts']
      finance:
        schema: mart_finance
        tags: ['nightly','finance']

    # # Reports Layer
    # reports:
    #   +materialized: table
    #   +schema: "reports"
    #   tags: ['reports']
on-run-end: 
  - "{{ log_dbt_results(results) }}"