name: dbt-deploy

on:
  push:
    branches:
      - master
    paths:
      - "transform/mainkode_analytics/**/*.sql"
      - "transform/mainkode_analytics/**/*.yml"
      - "transform/mainkode_analytics/**/*.json"
  workflow_dispatch:

permissions:
  id-token: write
  pages: write
  contents: read

env:
  AWS_REGION: us-west-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DBT_PROFILES_DIR: ${{ github.workspace }}/transform/mainkode_analytics/profiles
  DBT_PROJECT_DIR: ${{ github.workspace }}/transform/mainkode_analytics
  SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
  SNOWFLAKE_TRANSFORM_USER: ${{ secrets.SNOWFLAKE_USER }}
  SNOWFLAKE_TRANSFORM_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
  SNOWFLAKE_TRANSFORM_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}

 
jobs:
  dbt-unit-tests:
    runs-on: ubuntu-latest
    environment: dbt-pre-prod
    env:
      SNOWFLAKE_TRANSFORM_DATABASE: ${{ vars.SNOWFLAKE_TRANSFORM_DATABASE }}
      SNOWFLAKE_TRANSFORM_WAREHOUSE: ${{ vars.SNOWFLAKE_TRANSFORM_WAREHOUSE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          pip install dbt-core==1.8.7
          pip install dbt-snowflake==1.8.3

      - name: Install dbt dependencies
        run: |
          dbt deps --project-dir=transform/mainkode_analytics

      - name: Build and test modified dbt models and their first-order children
        run: |
          # build all the models that the unit tests need to run, but empty
          dbt run --profiles-dir=${{ env.DBT_PROFILES_DIR }} --project-dir=${{ env.DBT_PROJECT_DIR }} --target=pre-prod \
            --select +test_type:unit --empty

          # perform the actual unit tests
          dbt test --profiles-dir=${{ env.DBT_PROFILES_DIR }} --project-dir=${{ env.DBT_PROJECT_DIR }} --target=pre-prod \
            --select +test_type:unit

  # dbt-deploy:
  #   runs-on: ubuntu-latest
  #   needs: dbt-unit-tests
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.10"
  #         cache: 'pip'

  #     - name: Create and start virtual environment
  #       run: |
  #         python -m venv venv
  #         source venv/bin/activate

      - name: Install dependencies
        run: |
          pip install dbt-core==1.8.7
          pip install dbt-snowflake==1.8.3

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         role-to-assume: arn:aws:iam::362262895301:role/github-action-s3
  #         aws-region: ${{ env.AWS_REGION }}

  #     - name: Configure AWS Credentials for Docker
  #       run: |
  #           mkdir -p ${{ github.workspace }}/.aws
  #           echo "[default]" > ${{ github.workspace }}/.aws/credentials
  #           echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ${{ github.workspace }}/.aws/credentials
  #           echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ${{ github.workspace }}/.aws/credentials
  
  #           echo "[default]" > ${{ github.workspace }}/.aws/config
  #           echo "region = $AWS_REGION" >> ${{ github.workspace }}/.aws/config
  
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #           username: ${{ secrets.DOCKER_USERNAME }}
  #           password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3      
            
  #     - name: Build and push
  #       uses: docker/build-push-action@v6
  #       with:
  #         push: true
  #         tags: shrestic/dbt-image:latest
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         build-args: S3_TARGET_PATH=s3://s3-dbt-artifacts/manifests/prod
  #         file: ${{ github.workspace }}/build/Dockerfile.prod
  #         secret-files: |
  #           "aws=${{ github.workspace }}/.aws/credentials"
  dbt-docs:
    environment:
      name: dbt-pre-prod
      url: ${{ steps.deployment.outputs.page_url }}
    env:
      SNOWFLAKE_TRANSFORM_DATABASE: ${{ vars.SNOWFLAKE_TRANSFORM_DATABASE }}
      SNOWFLAKE_TRANSFORM_WAREHOUSE: ${{ vars.SNOWFLAKE_TRANSFORM_WAREHOUSE }}
    runs-on: ubuntu-latest
    needs: dbt-unit-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          pip install dbt-core==1.8.7
          pip install dbt-snowflake==1.8.3

      - name: Generate dbt docs
        id: docs
        shell: bash -l {0}
        run: |
          dbt deps --profiles-dir=${{ env.DBT_PROFILES_DIR }} --project-dir=${{ env.DBT_PROJECT_DIR }} --target=pre-prod
          dbt docs generate --profiles-dir=${{ env.DBT_PROFILES_DIR }} --project-dir=${{ env.DBT_PROJECT_DIR }} --target=pre-prod --target-path dbt-docs

      - name: Upload DBT docs Pages artifact
        id: build
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.DBT_PROJECT_DIR }}/dbt-docs
          name: dbt-docs

      - name: Publish DBT docs to dbt-docs-pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: dbt-docs
